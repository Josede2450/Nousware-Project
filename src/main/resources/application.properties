# =========================
# Application
# =========================
spring.application.name=nousware
spring.main.banner-mode=off

# =========================
# Server
# =========================
# Use Railway's injected PORT (fallback to 8080 locally)
server.port=${PORT:8080}
server.servlet.session.timeout=30m

# ----- Session Cookie (stateful auth) -----
server.servlet.session.cookie.name=CKS_SESSION
server.servlet.session.cookie.http-only=true

# Dev (HTTP, localhost)
#server.servlet.session.cookie.secure=false
#server.servlet.session.cookie.same-site=lax

# Prod (HTTPS, same root domain)
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.same-site=lax
server.servlet.session.cookie.domain=cks.software

# =========================
# Database (MySQL)
# =========================
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# =========================
# JPA / Hibernate
# =========================
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO}
spring.jpa.show-sql=${JPA_SHOW_SQL}
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# =========================
# Mail (Gmail SMTP)
# =========================
spring.mail.properties.mail.debug=true
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.protocol=${MAIL_PROTOCOL:smtp}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# App-level mail props (used by EmailServiceImpl)
app.mail.from=${MAIL_FROM:${MAIL_USERNAME}}
app.contact.notify-to=${CONTACT_NOTIFY_TO:${MAIL_USERNAME}}
app.frontend-url=${FRONTEND_BASE_URL:https://cks.software}

# =========================
# OAuth2 (Google)
# =========================
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
# Dev
#spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:${PORT}/login/oauth2/code/google
# Prod
spring.security.oauth2.client.registration.google.redirect-uri=https://api.cks.software/login/oauth2/code/google
spring.security.oauth2.client.provider.google.issuer-uri=https://accounts.google.com

# =========================
# CORS (Front-end origins)
# =========================
app.cors.allowed-origins=https://cks.software,https://www.cks.software

# =========================
# Actuator
# =========================
management.endpoint.health.show-details=always
management.health.db.enabled=false

# =========================
# Frontend
# =========================
frontend-url=https://cks.software
